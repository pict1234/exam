import socket
import sys

def chunks(l,n):
	return[l[i:i+n] for i in range(0,len(l),n)]

def rol(n,b):
	return((n<<b) | (n>>(32-b))) &0xffffffff

def sha1(data):
	bytes = ""
	h0= 0x67452301 
	h1= 0xEFCDAB89
	h2= 0x10325476
	h3= 0x98BADCFE
	h4= 0xC3D2E1F0
	for n in range(len(data)):
		bytes+='{0:08b}'.format(ord(data[n]))
	bits = bytes+"1"
	pbits = bits

	while len(pbits)%512 != 448:
		pbits+="0"

	pbits+='{0:064b}'.format(len(bits)-1)

	for c in chunks(pbits,512):
		words = chunks(c,32)
		w = [0]*80

		for n in range(0,16):
			w[n] = int(words[n],2)
		for i in range(16,80):
			w[i] = rol((w[i-3]^w[i-8]^w[i-14]^w[i-16]),1)

		a = h0
		b = h1
		c = h2
		d = h3
		e = h4

		for i in range(0,80):
			if 0<= i <= 19:
				f= (b&c) | ((~b)&d)
				k=  0x5A827999
			if 20<=i <= 39:
				f= b^c^d
				k=  0x6ED9EBA1
			if 40<=i <= 59:
				f = (b & c) |(b & d)|(c&d)
				k = 0x8F1BBCDC
			if 60<= i <= 79:
				f= b^c^d
				k = 0xCA62C1D6

			temp = rol(a,5)+f+e+k+w[i]&0xffffffff
			e = d
			d = c
			c = rol(b,30)
			b = a
			a = temp
		h0 = h0 + a & 0xffffffff
		h1 = h1 + a & 0xffffffff
		h2 = h2 + a & 0xffffffff
		h3 = h3 + a & 0xffffffff
		h4 = h4 + a & 0xffffffff

	return '%08x%08x%08x%08x%08x' % (h0, h1, h2, h3, h4)

if __name__ == '__main__':
	sock = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
	server_address = ('127.0.0.1',10005)
	print 'The server address is %s running on port %s '%server_address
	sock.bind(server_address)
	sock.listen(1)
	print "Waiting for connection"
	connection,client_address = sock.accept()

	try:
		data =	connection.recv(1024)
		digest = connection.recv(1024)
		print "Received data"+str(data)
		print "Received digest"+str(digest)
		
	finally:
		print 'closing.....'
		connection.close()
		atha = sha1(data)
		if(atha == digest):
			print 'Unaltered'
		else:
			print 'Altered'


























